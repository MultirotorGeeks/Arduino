LIBRARY NAME:

  avrfix
  
AUTHOR:

  Alison Leonard
  Makerbot Industries
  New York, New York
  http://alisonleonard.tumblr.com/
  
DESCRIPTION:
  
This library was created in the git repo for makerbot.  It provides fixed
point math functions for the AVR microcontrollers.  The full repository
containing this project is located at:
https://github.com/makerbot/MightyBoardFirmware/tree/master/firmware/src/MightyBoard/Motherboard/avrfix

This directory only contains copies of the header and library files needed
to use the library.  You may clone the full project above for more info.

At the bottom of this file is a copy of text from the original readme file in the
makerbot repository.

Please see the avrfix.h header file to get a better idea of how to use the
library functions.

TARGET APPLICATION PROJECT SETUP:

  This library can be used in eclipse C++ projects of type 'AVR Cross Target
  Application,' using the 'AVR-GCC' toolchain.
  
  In order to use this library in a target application project, this 
  Arduino support library must be linked into the build.  To do 
  this, right click the project and select Properties.  Then, expand the 'C/C++ 
  build' submenu on the left and click on 'Settings.'  In the 
  right side, under the 'Tool Settings' tab, expand the 'AVR C++ Linker' 
  submenu and click on 'Libraries.'  In the 'Libraries (-l)' box on the right, 
  add the library, called avrfix.  Note that you 
  should NOT enter the prefix 'lib' at the beginning, or the extension '.a' at 
  the end of these names.  In the 'Libraries Path (-L)' box on the lower right, 
  add the path to the library.  If your eclipse workspace is located at the top 
  'Arduino' folder of this git repository, and the full repository is checked 
  out including libraries, then the following paths should work::
  "${workspace_loc}/libraries/avrfix"
  
  The target application project will also need to have include paths set up to
  find the Arduino.h header file.  To do this, right click the project and 
  select Properties.  Then, expand the C/C++ build submenu on the left and click 
  on 'Settings.'  In the right side, under the 'Tool Settings' tab, expand both 
  the 'AVR Compiler' and the 'AVR C++ Compiler' submenus.  Under each of these, 
  select Directories, then click the 'Add...' button at the top right (with the 
  green + sign).  In this dialog, enter the path to the directory containing the 
  Arduino.h file. If your eclipse workspace is located at the top 'Arduino' 
  folder of this git repository, and the full repository is checked out including 
  libraries, then the following path should work for the library:
  "${workspace_loc}/libraries/avrfix"
  
  Finally, ensure that any source file in your target application project which
  uses functions from this library first includes the library header file using:
  #include "avrfix.h"

ORIGINAL README FILE FROM MAKERBOT:
  
=============================================================================
Readme for Fixed Point Library for Atmel 8 bit Processors
=============================================================================
     __ ____  _________
    /_ \\\  \/   /|    \______
   //   \\\     /|| D  /_    /.
  //     \\\_  /.||    \ ___/.
 /___/\___\\__/. |__|\__\__.___  ___ 
  ....  .......   ...||  _/_\  \////. 
                     || |.| |\  ///.
Content:             |__|.|_|///  \
- About               .... ./__/\__\
- Requirements               ........
- Files
- Compiling
- Usage


-----------------------------------------------------------------------------
About
-----------------------------------------------------------------------------

This library is dedicated for use with Atmel 8 bit Processors and is designed
according to ISO/IEC paper DTR 18037.
For Details please use the documents in the 'docu' directory.


-----------------------------------------------------------------------------
Requirements
-----------------------------------------------------------------------------

- gcc
- AVRtools is required for compiling and linking
- ar for building the library
- make, if the makefile is being used


-----------------------------------------------------------------------------
Files
-----------------------------------------------------------------------------

All Files of the library itself are in the directory named 'avrfix'. Those
Files are:
avrfix.c		implementation of the library
avrfix.h		headerfile of the library
avrfix_config.h		headerfile for configuring the library
Makefile		to make the library
sizes.txt		a list of function sizes
srecsize.c		used to get the codesize of functions
lgpl.txt		the licence of this project


-----------------------------------------------------------------------------
Compiling
-----------------------------------------------------------------------------

To use the library, it must be compiled first. It is recommended to use the
included Makefile, although it may be edited before it can be used.
First, the target architecture must be defined:

# target architecture
MCU	= atmega16

By default, the target architecture is the atmega16.

Also the path to some tools is needed:

# Tools
CC	= avr-gcc
AR = ar
AS	= avr-as
ASLD	= avr-gcc -x assembler
LD	= avr-ld
OBJCOPY = avr-objcopy
SRECSIZE = ./srecsize

After editing the Makefile, the library can be compiled by simply calling
'make'. The library is then compiled and archived into the file 'libavrfix.a',
if the value of PROJNAME is not changed in the Makefile.


------------------------------------------------------------------------------
Usage
------------------------------------------------------------------------------

To use the library, only the headerfile and the library itself is needed.
When compiling a project that uses the library, the library file needs to be
linked with the following options:

 -l avrfix -Wl,-Map=<projectname>.map,-L=<path to library> -mmcu=<target architecture>